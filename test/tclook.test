package require tcltest
namespace import ::tcltest::*

::tcltest::configure {*}$argv

::tcltest::loadTestedCommands

set TCLOOK 1
package require tclook

test list-1.0 {} -body {
    ::tclook::Values object oo::object
} -cleanup {
    ::log::lvSuppressLE i 1
} -result {main {object oo::object} {methods {} namespace {{namespace ::oo::Obj1}} class {{class ::oo::class}} mixins {}}}

test list-1.1 {} -body {
    ::tclook::Values class oo::object
} -cleanup {
} -result [if {$tcl_patchLevel eq "8.6.1"} {
    format %s {main {class oo::object} {methods {} superclasses {} subclasses {{class ::oo::Slot} {class ::tclook::PrintView} {class ::tclook::TreeView}} mixins {} instances {{object ::tclook::Values}}}}
} elseif {$tcl_patchLevel eq "8.6.7"} {
    format %s {main {class oo::object} {methods {} superclasses {} subclasses {{class ::oo::class} {class ::oo::Slot} {class ::tclook::PrintView} {class ::tclook::TreeView}} mixins {} instances {{object ::tclook::Values}}}}
    }
]

test list-1.2 {} -body {
    ::tclook::Values namespace ::tcl
} -cleanup {
} -result [if {$tcl_patchLevel eq "8.6.1"} {
    format %s {main {namespace ::tcl} {vars {{set ::tcl::auto_oldpath} {set ::tcl::Path} {set ::tcl::history} {set ::tcl::Dir}} commands {{command ::tcl::HistIndex} {command ::tcl::pkgconfig} {command ::tcl::CopyDirectory} {command ::tcl::HistEvent} {command ::tcl::Bgerror} {command ::tcl::InitWinEnv} {command ::tcl::HistNextID} {command ::tcl::EnvTraceProc} {command ::tcl::HistInfo} {command ::tcl::HistKeep} {command ::tcl::HistAdd} {command ::tcl::history} {command ::tcl::HistRedo} {command ::tcl::HistChange} {command ::tcl::prefix} {command ::tcl::HistClear}} children {{namespace ::tcl::file} {namespace ::tcl::tm} {namespace ::tcl::info} {namespace ::tcl::clock} {namespace ::tcl::binary} {namespace ::tcl::namespace} {namespace ::tcl::array} {namespace ::tcl::zlib} {namespace ::tcl::mathop} {namespace ::tcl::unsupported} {namespace ::tcl::chan} {namespace ::tcl::dict} {namespace ::tcl::prefix} {namespace ::tcl::mathfunc} {namespace ::tcl::string}}}}
} elseif {$tcl_patchLevel eq "8.6.7"} {
    format %s {main {namespace ::tcl} {vars {{set ::tcl::auto_oldpath} {set ::tcl::Path} {set ::tcl::history} {set ::tcl::Dir}} commands {{command ::tcl::HistIndex} {command ::tcl::pkgconfig} {command ::tcl::CopyDirectory} {command ::tcl::HistEvent} {command ::tcl::Bgerror} {command ::tcl::InitWinEnv} {command ::tcl::HistNextID} {command ::tcl::EnvTraceProc} {command ::tcl::HistInfo} {command ::tcl::MacOSXPkgUnknown} {command ::tcl::HistKeep} {command ::tcl::HistAdd} {command ::tcl::pkgindex} {command ::tcl::history} {command ::tcl::HistRedo} {command ::tcl::HistChange} {command ::tcl::prefix} {command ::tcl::HistClear}} children {{namespace ::tcl::file} {namespace ::tcl::tm} {namespace ::tcl::info} {namespace ::tcl::clock} {namespace ::tcl::binary} {namespace ::tcl::namespace} {namespace ::tcl::array} {namespace ::tcl::encoding} {namespace ::tcl::zlib} {namespace ::tcl::mathop} {namespace ::tcl::unsupported} {namespace ::tcl::Pkg} {namespace ::tcl::chan} {namespace ::tcl::dict} {namespace ::tcl::mathfunc} {namespace ::tcl::prefix} {namespace ::tcl::string}}}}
    }
]

test list-1.3 {} -setup {
    oo::class create Foo {method foo {a b} {list $b $a}}
} -body {
    ::tclook::Values method {foo {a b} {class ::Foo}}
} -cleanup {
    ::Foo destroy
} -result {side {} {method foo {a b} {list $b $a}}}

test list-1.4 {} -setup {
    proc foo {a b} {list $b $a}
} -body {
    ::tclook::Values command ::foo
} -cleanup {
    rename ::foo {}
} -result {side {} {proc ::foo {a b} {list $b $a}}}

test tclook-1.0 {} -body {
    ::tclook::tclook object oo::object
} -cleanup {
    ::log::lvSuppressLE i 1
} -output {object ::oo::object
  Methods
  Namespace
    namespace ::oo::Obj1
  Class
    class ::oo::class
  Mixins
}

test tclook-1.1 {} -body {
    ::tclook::tclook oo::object
} -cleanup {
    ::log::lvSuppressLE i 1
} -output [if {$tcl_patchLevel eq "8.6.1"} {
    format %s {class ::oo::object
  Methods
  Superclasses
  Subclasses
    class ::oo::Slot
    class ::tclook::PrintView
    class ::tclook::TreeView
  Mixins
  Instances
    object ::tclook::Values
}
} elseif {$tcl_patchLevel eq "8.6.7"} {
    format %s {class ::oo::object
  Methods
  Superclasses
  Subclasses
    class ::oo::class
    class ::oo::Slot
    class ::tclook::PrintView
    class ::tclook::TreeView
  Mixins
  Instances
    object ::tclook::Values
}
}]

test tclook-1.2 {} -body {
    ::tclook::tclook ::tcl::binary
} -cleanup {
    ::log::lvSuppressLE i 1
} -output {namespace ::tcl::binary
  Vars
  Commands
    command ::tcl::binary::decode
    command ::tcl::binary::scan
    command ::tcl::binary::format
    command ::tcl::binary::encode
  Children
    namespace ::tcl::binary::decode
    namespace ::tcl::binary::encode
}

test tclook-1.3 {} -setup {
    oo::class create Foo {method foo {a b} {list $b $a}}
} -body {
    ::tclook::tclook method foo {a b} {class ::Foo}
} -cleanup {
    Foo destroy
    ::log::lvSuppressLE i 1
} -output {method foo {a b} {list $b $a}
}

test tclook-1.4 {} -setup {
    proc foobarbaz {a b} {list $b $a}
} -body {
    ::tclook::tclook foobarbaz
} -cleanup {
    rename ::foobarbaz {}
} -output {proc ::foobarbaz {a b} {list $b $a}
}

test tclook-2.0 {} -setup {
    oo::class create Foo {forward foo list a b}
} -body {
    ::tclook::tclook Foo
} -cleanup {
    Foo destroy
    ::log::lvSuppressLE i 1
} -output {class ::Foo
  Methods
    forward foo {list a b} {class ::Foo}
  Superclasses
    class ::oo::object
  Subclasses
  Mixins
  Instances
}

test tclook-2.1 {} -setup {
    oo::class create Foo {forward foo list a b}
} -body {
    ::tclook::tclook forward foo {list a b} {class ::Foo}
} -cleanup {
    Foo destroy
    ::log::lvSuppressLE i 1
} -output {forward foo list a b
}

test tclook-2.2 {} -setup {
    oo::object create Foo
    oo::objdefine Foo forward foo list a b
} -body {
    ::tclook::tclook forward foo {list a b} {object ::Foo}
} -cleanup {
    Foo destroy
    ::log::lvSuppressLE i 1
} -output {forward foo list a b
}

test tclook-2.3 {} -setup {
    oo::class create Foo {forward foo [namespace which list] a b}
} -body {
    ::tclook::tclook forward foo {list a b} {class ::Foo}
} -cleanup {
    Foo destroy
    ::log::lvSuppressLE i 1
} -output {forward foo ::list a b
}

cleanupTests
